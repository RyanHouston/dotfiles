# Bigger scrollback
set -g history-limit 100000

# start window number at 1 for easier swtiching
set -g base-index 1

# listen to alerts from all windows
set -g bell-action any

# vim bindings
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim bindings to cycle thru windows
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# quick pane cycling
unbind ^B
bind ^B select-pane -t :.+

# send prefix to nested tmux session
bind-key b send-prefix

# Make new windows use current dir by default. (1.8 behavior)
bind c new-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'

# Status bar
set -g status-bg black
set -g status-fg blue
set -g status-left '#[fg=green]#H:#S'
set -g status-left-length 60
set -g status-justify centre

# Highlight active window
set-window-option -g window-status-current-bg magenta
set-window-option -g window-status-current-fg black

# Use "gapless" sequence for window numbers
set-option -g renumber-windows on

# Show if activity on another window
setw -g monitor-activity on
set -g visual-activity on

# Enable the mouse just because we can
set -g mouse

# Vim style copy/paste bindings
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/#new-copy-mode-key-bindings
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key Escape copy-mode; \
  bind-key -t vi-copy Escape cancel; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy r rectangle-toggle; \
  bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key Escape copy-mode; \
  bind-key P paste-buffer; \
  bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Workaround to prevent neovim needing to hit escape twice
set escape-time 0

